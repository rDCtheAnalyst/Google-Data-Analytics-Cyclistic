#setting my work directory
setwd("/Users/dc/Documents/Project/Google's Data Analytics/csv files for new R file")
#---------------------------------------------------------------------------
#install packages
install.packages('tidyverse')
install.packages('janitor')
install.packages('lubridate')
install.packages('devtools')
install.packages('psych')
install.packages('hunspell')
#---------------------------------------------------------------------------
#load packages

library(tidyverse)
library(lubridate)
library(janitor)
library(data.table)
library(readr)
library(psych)
library(ggplot2)
#---------------------------------------------------------------------------

#Collect Data (Data Wrangling)
#---------------------------------------------------------------------------
december_2020<-read.csv("202012-divvy-tripdata.csv")
january_2021<-read.csv("202101-divvy-tripdata.csv")
february_2021<-read.csv("202102-divvy-tripdata.csv")
march_2021<-read.csv("202103-divvy-tripdata.csv")
april_2021<-read.csv("202104-divvy-tripdata.csv")
may_2021<-read.csv("202105-divvy-tripdata.csv")
june_2021<-read.csv("202106-divvy-tripdata.csv")
july_2021<-read.csv("202107-divvy-tripdata.csv")
august_2021<-read.csv("202108-divvy-tripdata.csv")
september_2021<-read.csv("202109-divvy-tripdata.csv")
october_2021<-read.csv("202110-divvy-tripdata.csv")
november_2021<-read.csv("202111-divvy-tripdata.csv")

#---------------------------------------------------------------------------

#Data Validation
colnames(december_2020)
colnames(january_2021)
colnames(february_2021)
colnames(march_2021)
colnames(april_2021)
colnames(may_2021)
colnames(june_2021)
colnames(july_2021)
colnames(august_2021)
colnames(september_2021)
colnames(october_2021)
colnames(november_2021)

sum(nrow(december_2020) + nrow(january_2021) + nrow(february_2021) + nrow(march_2021)
    + nrow(april_2021) + nrow(may_2021) + nrow(june_2021) + nrow(july_2021)
    + nrow(august_2021) + nrow(september_2021) + nrow(october_2021)
    + nrow(november_2021))

#---------------------------------------------------------------------------
#Phase 3 DATA PROCESS
#Aggregate and observe Data
trip_final<- rbind(december_2020,january_2021,february_2021,march_2021,
                   april_2021,may_2021,june_2021,july_2021,august_2021,
                   september_2021,october_2021,november_2021)

#Write the combined data into a new csv file
write.csv(trip_final,file="trip_final.csv",row.names= FALSE)

trip_final<-read.csv("trip_final.csv")
options(future.globals.maxSize=Inf)
colnames(trip_final)

#Data Validation
str(trip_final)
View(head(trip_final))
dim(trip_final)
summary(trip_final)
names(trip_final)

#---------------------------------------------------------------------------
#Phase 3 DATA CLEANING
#Data Cleaning
colSums(is.na(trip_final))
trip_clean_final<-trip_final[complete.cases(trip_final), ]
trip_clean_final<- distinct(trip_clean_final)

trip_clean_final<- trip_clean_final %>% 
  filter(trip_clean_final$started_at < trip_clean_final$ended_at)

trip_clean_final<- rename(trip_clean_final,customer_type = member_casual,bike_type = rideable_type)
trip_clean_final<- rename(trip_clean_final,start_time = started_at)

#Remove empty data
drop_na(trip_clean_final)
remove_empty(trip_clean_final)
remove_missing(trip_clean_final)

#Create additional columns for date, month, year, day, year, and day of week from the started_column.
trip_clean_final$date<- as.Date(trip_clean_final$start_time)
trip_clean_final$week_day<- format(as.Date(trip_clean_final$date), "%A")
trip_clean_final$month<- format(as.Date(trip_clean_final$date),"%b_%y")
trip_clean_final$year<- format(trip_clean_final$date,"%Y")

trip_clean_final$time<- format(trip_clean_final$start_time, format= "%H:%M")
trip_clean_final$time<- as.POSIXct(trip_clean_final$time, format= "%H:%M")
trip_clean_final$ride_length<- difftime(trip_clean_final$ended_at, trip_clean_final$start_time, units="mins")

#You want to filter date that we will not be using
trip_clean_final<- trip_clean_final %>% 
  select(bike_type,customer_type,month,year,time,start_time,week_day,ride_length)

#You want to get rid of rides that are way too long, shsould be limited to 1 day or 144 minutes,or 24 hours
trip_clean_final<- trip_clean_final[!trip_clean_final$ride_length>1440,]

#Get rid of negative rides
trip_clean_final<- trip_clean_final[!trip_clean_final$ride_length<5,]

#Write csv file again and restart again
write.csv(trip_clean_final,file = "trip_clean_file.csv",row.names = FALSE)


#---------------------------------------------------------------------------
#Phase 4: DATA ANALYSIS
#validate your data and make sure everything is ok
trip_clean_final<- read_csv("trip_clean_file.csv")

str(trip_clean_final)
names(trip_clean_final)

#Sort the week days and month in order for future analysis process
trip_clean_final$month<- ordered(trip_clean_final$month,
                                 levels=c("Dec_20","Jan_21","Feb_21","Mar_21",
                                          "Apr_21","May_21","Jun_21","Jul_21",
                                          "Aug_21","Sep_21","Nov_21","Dec_21"))
trip_clean_final$week_day<- ordered(trip_clean_final$week_day,
                                    levels=c("Sunday","Monday","Tuesday","Wednesday",
                                             "Thursday","Friday","Saturday"))

#Analysis 1: min, max, median, and mean ride lengths
view(describe(trip_clean_final$ride_length, fast = TRUE))

#Analysis 2: Total number of customers by membership details
view(table(trip_clean_final$customer_type))

#Analysis 3: Total ride for each customer type in minutes
view(setNames(aggregate(ride_length~customer_type,trip_clean_final,sum),
              c("customer_type","total_ride_length(mins)")))

#Analysis 4: Show differences between members and causal riders in terms of length of (mean,max, median, and min)
view(trip_clean_final %>% 
       group_by(customer_type) %>% 
       summarise(min_length_minutes=min(ride_length),
                 max_ride_length=max(ride_length),
                 median_length_minutes=median(ride_length),
                 mean_length_minutes=mean(ride_length)))

#Analysis 5: Average ride_length for users by day_of_week and number of total rides by day_of_week
view(trip_clean_final %>% 
       group_by(week_day) %>% 
       summarize(Avg_length=mean(ride_length),
                 number_of_rides=n())
)

#Analysis 6: Number of average rides by month
view(trip_clean_final %>% 
       group_by(month) %>% 
       summarize(Avg_length=mean(ride_length),
                 number_of_rides=n())
)

#Analysis 7: Average ride length in comparison to each month, according to each customer type
view(aggregate(trip_clean_final$ride_length ~ trip_clean_final$customer_type+
                  trip_clean_final$week_day, FUN=mean))

#Analysis 8: Average ride length comparison by each month according to each customer type
view(aggregate(trip_clean_final$ride_length ~ trip_clean_final$customer_type+
                 trip_clean_final$month,FUN = mean))

#Analysis 9: Analyze ride length data customer type and weekday
view(
  trip_clean_final %>% 
  group_by(customer_type,week_day) %>% 
    summarize(number_of_rides=n(),
              average_duration= mean(ride_length),
              meadian_duration= median(ride_length),
              max_duration= max(ride_length),
              min_duration= min(ride_length))
)

#Analysis 10: Analyze ride length data by customer type and month
view(
  trip_clean_final %>% 
    group_by(customer_type,month) %>% 
    summarize(number_of_rides=n(),
              average_duration=mean(ride_length),
              median_duration=median(ride_length),
              max_duration=max(ride_length),
              min_duration=min(ride_length))
)

#Write a clean file for future visualizations
write.csv(trip_clean_final,file="trip_clean_final_tableau.csv",row.names = FALSE)
